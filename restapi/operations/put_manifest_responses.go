// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutManifestCreatedCode is the HTTP code returned for type PutManifestCreated
const PutManifestCreatedCode int = 201

/*PutManifestCreated Manifest Created

swagger:response putManifestCreated
*/
type PutManifestCreated struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutManifestCreated creates PutManifestCreated with default headers values
func NewPutManifestCreated() *PutManifestCreated {

	return &PutManifestCreated{}
}

// WithPayload adds the payload to the put manifest created response
func (o *PutManifestCreated) WithPayload(payload string) *PutManifestCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put manifest created response
func (o *PutManifestCreated) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutManifestCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutManifestBadRequestCode is the HTTP code returned for type PutManifestBadRequest
const PutManifestBadRequestCode int = 400

/*PutManifestBadRequest Bad Request Body

swagger:response putManifestBadRequest
*/
type PutManifestBadRequest struct {
}

// NewPutManifestBadRequest creates PutManifestBadRequest with default headers values
func NewPutManifestBadRequest() *PutManifestBadRequest {

	return &PutManifestBadRequest{}
}

// WriteResponse to the client
func (o *PutManifestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// PutManifestUnauthorizedCode is the HTTP code returned for type PutManifestUnauthorized
const PutManifestUnauthorizedCode int = 401

/*PutManifestUnauthorized Unauthorized

swagger:response putManifestUnauthorized
*/
type PutManifestUnauthorized struct {
	/*Authorization information is missing or invalid

	 */
	WWWAuthenticate string `json:"WWW-Authenticate"`
}

// NewPutManifestUnauthorized creates PutManifestUnauthorized with default headers values
func NewPutManifestUnauthorized() *PutManifestUnauthorized {

	return &PutManifestUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the put manifest unauthorized response
func (o *PutManifestUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *PutManifestUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the put manifest unauthorized response
func (o *PutManifestUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *PutManifestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW-Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW-Authenticate", wWWAuthenticate)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PutManifestNotFoundCode is the HTTP code returned for type PutManifestNotFound
const PutManifestNotFoundCode int = 404

/*PutManifestNotFound Not Found

swagger:response putManifestNotFound
*/
type PutManifestNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutManifestNotFound creates PutManifestNotFound with default headers values
func NewPutManifestNotFound() *PutManifestNotFound {

	return &PutManifestNotFound{}
}

// WithPayload adds the payload to the put manifest not found response
func (o *PutManifestNotFound) WithPayload(payload string) *PutManifestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put manifest not found response
func (o *PutManifestNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutManifestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutManifestInternalServerErrorCode is the HTTP code returned for type PutManifestInternalServerError
const PutManifestInternalServerErrorCode int = 500

/*PutManifestInternalServerError Internal Server Error

swagger:response putManifestInternalServerError
*/
type PutManifestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutManifestInternalServerError creates PutManifestInternalServerError with default headers values
func NewPutManifestInternalServerError() *PutManifestInternalServerError {

	return &PutManifestInternalServerError{}
}

// WithPayload adds the payload to the put manifest internal server error response
func (o *PutManifestInternalServerError) WithPayload(payload string) *PutManifestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put manifest internal server error response
func (o *PutManifestInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutManifestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
